// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox addNumberNeighboursCheckbox;

  @NonNull
  public final Button blacklistButton;

  @NonNull
  public final Button callButton;

  @NonNull
  public final TextView contactName;

  @NonNull
  public final TextView contactNumber;

  @NonNull
  public final TextView countdownText;

  @NonNull
  public final Button messageButton;

  @NonNull
  public final SeekBar numberNeighboursSlider;

  @NonNull
  public final CheckBox privateCallingCheckbox;

  @NonNull
  public final Button shuffleButton;

  @NonNull
  public final Button skipButton;

  @NonNull
  public final TextView totalContactsText;

  private ActivityMainBinding(@NonNull RelativeLayout rootView,
      @NonNull CheckBox addNumberNeighboursCheckbox, @NonNull Button blacklistButton,
      @NonNull Button callButton, @NonNull TextView contactName, @NonNull TextView contactNumber,
      @NonNull TextView countdownText, @NonNull Button messageButton,
      @NonNull SeekBar numberNeighboursSlider, @NonNull CheckBox privateCallingCheckbox,
      @NonNull Button shuffleButton, @NonNull Button skipButton,
      @NonNull TextView totalContactsText) {
    this.rootView = rootView;
    this.addNumberNeighboursCheckbox = addNumberNeighboursCheckbox;
    this.blacklistButton = blacklistButton;
    this.callButton = callButton;
    this.contactName = contactName;
    this.contactNumber = contactNumber;
    this.countdownText = countdownText;
    this.messageButton = messageButton;
    this.numberNeighboursSlider = numberNeighboursSlider;
    this.privateCallingCheckbox = privateCallingCheckbox;
    this.shuffleButton = shuffleButton;
    this.skipButton = skipButton;
    this.totalContactsText = totalContactsText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_number_neighbours_checkbox;
      CheckBox addNumberNeighboursCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (addNumberNeighboursCheckbox == null) {
        break missingId;
      }

      id = R.id.blacklist_button;
      Button blacklistButton = ViewBindings.findChildViewById(rootView, id);
      if (blacklistButton == null) {
        break missingId;
      }

      id = R.id.call_button;
      Button callButton = ViewBindings.findChildViewById(rootView, id);
      if (callButton == null) {
        break missingId;
      }

      id = R.id.contact_name;
      TextView contactName = ViewBindings.findChildViewById(rootView, id);
      if (contactName == null) {
        break missingId;
      }

      id = R.id.contact_number;
      TextView contactNumber = ViewBindings.findChildViewById(rootView, id);
      if (contactNumber == null) {
        break missingId;
      }

      id = R.id.countdown_text;
      TextView countdownText = ViewBindings.findChildViewById(rootView, id);
      if (countdownText == null) {
        break missingId;
      }

      id = R.id.message_button;
      Button messageButton = ViewBindings.findChildViewById(rootView, id);
      if (messageButton == null) {
        break missingId;
      }

      id = R.id.number_neighbours_slider;
      SeekBar numberNeighboursSlider = ViewBindings.findChildViewById(rootView, id);
      if (numberNeighboursSlider == null) {
        break missingId;
      }

      id = R.id.private_calling_checkbox;
      CheckBox privateCallingCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (privateCallingCheckbox == null) {
        break missingId;
      }

      id = R.id.shuffle_button;
      Button shuffleButton = ViewBindings.findChildViewById(rootView, id);
      if (shuffleButton == null) {
        break missingId;
      }

      id = R.id.skip_button;
      Button skipButton = ViewBindings.findChildViewById(rootView, id);
      if (skipButton == null) {
        break missingId;
      }

      id = R.id.total_contacts_text;
      TextView totalContactsText = ViewBindings.findChildViewById(rootView, id);
      if (totalContactsText == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, addNumberNeighboursCheckbox,
          blacklistButton, callButton, contactName, contactNumber, countdownText, messageButton,
          numberNeighboursSlider, privateCallingCheckbox, shuffleButton, skipButton,
          totalContactsText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
